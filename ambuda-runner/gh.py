#
# Github automation
#
import yaml

def __get_pr_open_workflow():
    return {
        'name': 'Build release image and deploy on staging environment',
        'on': {
            'workflow_dispatch': {},
            'pull_request': {
                'branches': ['release'],
                'types': ['opened', 'reopened', 'synchronize'],
            }
        },
        'jobs': {
            'deploy': {
                "runs-on": "ubuntu-latest",
                "steps": [
                    {
                        "name": "Checkout",
                        "uses": "actions/checkout@v4",
                        "with": {"sparse-checkout": "\nar\nambuda-runner"}
                    },
                    {
                        "name": "Exec",
                        "run": "\ncd ${{ github.workspace }}\n`pwd`ar remotely build",
                        "env": {
                            "SSH_HOST": "${{ secrets.SSH_HOST }}",
                            "SSH_KEY": "${{ secrets.SSH_KEY }}",
                            "SSH_KNOWN_HOSTS": "${{ secrets.SSH_KNOWN_HOSTS }}"
                        }
                    }
                ]
            },
            'stage': {
                "runs-on": "ubuntu-latest",
                "needs": "deploy",
                "steps": [
                    {
                        "name": "Checkout",
                        "uses": "actions/checkout@v4",
                        "with": {"sparse-checkout": "\nar\nambuda-runner"}
                    },
                    {
                        "name": "Exec",
                        "run": "\ncd ${{ github.workspace }}\n`pwd`ar remotely stage",
                        "env": {
                            "SSH_HOST": "${{ secrets.SSH_HOST }}",
                            "SSH_KEY": "${{ secrets.SSH_KEY }}",
                            "SSH_KNOWN_HOSTS": "${{ secrets.SSH_KNOWN_HOSTS }}"
                        }
                    }
                ]
            },
            'pr_commented': {
                'name': 'PR comment',
                'needs': 'deploy',
                'if': '${{ github.event.issue.pull_request.opened || github.event.issue.pull_request.reopened }}',
                'runs-on': 'ubuntu-latest',
                'steps': [
                    {
                        'name': "Create comment",
                        'uses': "peter-evans/create-or-update-comment@v2",
                        'with': {
                            'issue-number': '${{ github.event.pull_request.number }}',
                            'body': 'Your pull request is open. Reviewers will review the pullrequest at the earliest.',
                            'reactions': '+1'
                        }
                    }
                ]
            }
        }
    }


def gh_generate_workflows():
    file_name = '.github/workflows/rel-pr-open.yml'
    doc = '##### AUTOMATICALLY GENERATED BY ambuda-runner. DO NOT MODIFY #####'
    doc += '\n'
    doc += yaml.dump(__get_pr_open_workflow(), default_flow_style=False)
    with open(file_name, 'w') as yaml_file:
        yaml_file.write(doc)